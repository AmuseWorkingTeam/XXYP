package com.xxyp.xxyp.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xxyp.xxyp.dao.entity.MessageImageEntity;
import com.xxyp.xxyp.dao.entity.MessageVoiceEntity;
import com.xxyp.xxyp.dao.entity.UserEntity;
import com.xxyp.xxyp.dao.entity.ChatMsgEntity;
import com.xxyp.xxyp.dao.entity.ShotEntity;
import com.xxyp.xxyp.dao.entity.ConversationEntity;
import com.xxyp.xxyp.dao.entity.MessageShotEntity;

import com.xxyp.xxyp.dao.MessageImageEntityDao;
import com.xxyp.xxyp.dao.MessageVoiceEntityDao;
import com.xxyp.xxyp.dao.UserEntityDao;
import com.xxyp.xxyp.dao.ChatMsgEntityDao;
import com.xxyp.xxyp.dao.ShotEntityDao;
import com.xxyp.xxyp.dao.ConversationEntityDao;
import com.xxyp.xxyp.dao.MessageShotEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageImageEntityDaoConfig;
    private final DaoConfig messageVoiceEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;
    private final DaoConfig chatMsgEntityDaoConfig;
    private final DaoConfig shotEntityDaoConfig;
    private final DaoConfig conversationEntityDaoConfig;
    private final DaoConfig messageShotEntityDaoConfig;

    private final MessageImageEntityDao messageImageEntityDao;
    private final MessageVoiceEntityDao messageVoiceEntityDao;
    private final UserEntityDao userEntityDao;
    private final ChatMsgEntityDao chatMsgEntityDao;
    private final ShotEntityDao shotEntityDao;
    private final ConversationEntityDao conversationEntityDao;
    private final MessageShotEntityDao messageShotEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageImageEntityDaoConfig = daoConfigMap.get(MessageImageEntityDao.class).clone();
        messageImageEntityDaoConfig.initIdentityScope(type);

        messageVoiceEntityDaoConfig = daoConfigMap.get(MessageVoiceEntityDao.class).clone();
        messageVoiceEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        chatMsgEntityDaoConfig = daoConfigMap.get(ChatMsgEntityDao.class).clone();
        chatMsgEntityDaoConfig.initIdentityScope(type);

        shotEntityDaoConfig = daoConfigMap.get(ShotEntityDao.class).clone();
        shotEntityDaoConfig.initIdentityScope(type);

        conversationEntityDaoConfig = daoConfigMap.get(ConversationEntityDao.class).clone();
        conversationEntityDaoConfig.initIdentityScope(type);

        messageShotEntityDaoConfig = daoConfigMap.get(MessageShotEntityDao.class).clone();
        messageShotEntityDaoConfig.initIdentityScope(type);

        messageImageEntityDao = new MessageImageEntityDao(messageImageEntityDaoConfig, this);
        messageVoiceEntityDao = new MessageVoiceEntityDao(messageVoiceEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);
        chatMsgEntityDao = new ChatMsgEntityDao(chatMsgEntityDaoConfig, this);
        shotEntityDao = new ShotEntityDao(shotEntityDaoConfig, this);
        conversationEntityDao = new ConversationEntityDao(conversationEntityDaoConfig, this);
        messageShotEntityDao = new MessageShotEntityDao(messageShotEntityDaoConfig, this);

        registerDao(MessageImageEntity.class, messageImageEntityDao);
        registerDao(MessageVoiceEntity.class, messageVoiceEntityDao);
        registerDao(UserEntity.class, userEntityDao);
        registerDao(ChatMsgEntity.class, chatMsgEntityDao);
        registerDao(ShotEntity.class, shotEntityDao);
        registerDao(ConversationEntity.class, conversationEntityDao);
        registerDao(MessageShotEntity.class, messageShotEntityDao);
    }
    
    public void clear() {
        messageImageEntityDaoConfig.clearIdentityScope();
        messageVoiceEntityDaoConfig.clearIdentityScope();
        userEntityDaoConfig.clearIdentityScope();
        chatMsgEntityDaoConfig.clearIdentityScope();
        shotEntityDaoConfig.clearIdentityScope();
        conversationEntityDaoConfig.clearIdentityScope();
        messageShotEntityDaoConfig.clearIdentityScope();
    }

    public MessageImageEntityDao getMessageImageEntityDao() {
        return messageImageEntityDao;
    }

    public MessageVoiceEntityDao getMessageVoiceEntityDao() {
        return messageVoiceEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

    public ChatMsgEntityDao getChatMsgEntityDao() {
        return chatMsgEntityDao;
    }

    public ShotEntityDao getShotEntityDao() {
        return shotEntityDao;
    }

    public ConversationEntityDao getConversationEntityDao() {
        return conversationEntityDao;
    }

    public MessageShotEntityDao getMessageShotEntityDao() {
        return messageShotEntityDao;
    }

}
